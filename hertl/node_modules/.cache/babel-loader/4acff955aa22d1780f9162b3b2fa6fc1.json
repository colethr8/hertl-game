{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jango\\\\Desktop\\\\HERTL\\\\hertl\\\\src\\\\DailyHertl.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport './Hertl.css';\nimport playerList from './scraping/nhl_players.json';\nimport answerList from './scraping/answer_list.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DailyHertl(props) {\n  _s();\n\n  // state variables\n  const [correctPlayer, setCorrectPlayer] = useState();\n  const [playing, setPlaying] = useState(true);\n  const [searching, setSearching] = useState(false);\n  const [filtered, setFiltered] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const [oneGuess, setOneGuess] = useState(false);\n  const [won, setWon] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [date, setDate] = useState();\n  const maxGuesses = 8; // checks guessed player object against the correct player\n\n  function checkGuess(player) {\n    let updated = checks(player, correctPlayer); // guessed player\n\n    if (player.id === correctPlayer.id) {\n      setWon(true);\n      setPlaying(false);\n      saveStats(true, player);\n      return [updated, true];\n    }\n\n    return [updated, false];\n  }\n\n  const checks = useCallback((player, correct) => {\n    let updated = player;\n\n    if (player.name === correct.name) {\n      updated.name_color = \"green\";\n    }\n\n    if (player.team === correct.team) {\n      updated.team_color = \"green\";\n    } else if (correct.formerTeams.includes(player.team)) {\n      updated.team_color = \"yellow\";\n    }\n\n    if (player.division === correct.division) {\n      updated.division_color = \"green\";\n    } else if (player.conference === correct.conference) {\n      updated.division_color = \"yellow\";\n    }\n\n    if (player.nationality === correct.nationality) {\n      updated.nationality_color = \"green\";\n    }\n\n    if (player.position === correct.position) {\n      updated.position_color = \"green\";\n    } else if ([\"LW\", \"C\", \"RW\"].includes(correct.position) && [\"LW\", \"C\", \"RW\"].includes(player.position)) {\n      updated.position_color = \"yellow\";\n    }\n\n    if (player.number === correct.number) {\n      updated.number_color = \"green\";\n    } else if (player.number >= correct.number - 3 && player.number <= correct.number + 3) {\n      updated.number_color = \"yellow\";\n    }\n\n    if (player.currentAge === correct.currentAge) {\n      updated.age_color = \"green\";\n    } else if (player.currentAge >= correct.currentAge - 3 && player.currentAge <= correct.currentAge + 3) {\n      updated.age_color = \"yellow\";\n    }\n\n    const guess_height = convert_height(player.height);\n    const correct_height = convert_height(correct.height);\n\n    if (guess_height === correct_height) {\n      updated.height_color = \"green\";\n    } else if (guess_height >= correct_height - 3 && guess_height <= correct_height + 3) {\n      updated.height_color = \"yellow\";\n    }\n\n    if (player.weight === correct.weight) {\n      updated.weight_color = \"green\";\n    } else if (player.weight >= correct.weight - 10 && player.weight <= correct.weight + 10) {\n      updated.weight_color = \"yellow\";\n    }\n\n    return updated;\n  }, []); // update doc title\n\n  useEffect(() => {\n    document.title = props.title;\n    const today = new Date();\n    const date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n    if (localStorage.getItem(\"daily-hertl-stats\") === null) {\n      setCorrectPlayer(getPlayer(date));\n      setDate(date);\n    } else {\n      const correct = getPlayer(date);\n      const stats = JSON.parse(localStorage.getItem(\"daily-hertl-stats\"));\n\n      if (date in stats) {\n        setPlaying(false);\n        setOneGuess(true);\n        let ids = stats[date];\n        let guessList = [];\n        ids.forEach(id => {\n          playerList.forEach(player => {\n            if (player.id === id) {\n              guessList.push(player);\n              return;\n            }\n          });\n        });\n        let final = [];\n        console.log(correct);\n        guessList.forEach(guess => {\n          final.push(checks(guess, correct));\n        });\n        setGuesses(final);\n      } else {\n        setCorrectPlayer(correct);\n        setDate(date);\n      }\n    }\n  }, [props.title, checks]); // generates random player from player list\n\n  function getPlayer(date) {\n    let selected;\n    answerList.forEach(answer => {\n      if (answer.date === date) {\n        selected = answer;\n      }\n    });\n    return selected;\n  } // filter player list based on search inputted by user\n\n\n  function search(event) {\n    setFiltered([]);\n    const val = event.target.value;\n\n    if (val.length >= 3) {\n      setSearching(true);\n      playerList.forEach(player => {\n        const name = player.name;\n\n        if (name.toLowerCase().includes(val.toLowerCase())) {\n          setFiltered(old => [...old, player]);\n        }\n      });\n    }\n  } // make a guess via selected search\n\n\n  function guess(event) {\n    setSearching(false);\n    setFiltered([]);\n    document.getElementById(\"search-field\").value = \"\";\n    let guessed = checkGuess(getFilteredPlayer(event.target.id));\n    setGuesses(old => [...old, guessed[0]]);\n\n    if (!oneGuess) {\n      setOneGuess(true);\n    }\n\n    if (!guessed[1] && guesses.length >= maxGuesses - 1) {\n      setPlaying(false);\n      setLost(true);\n      saveStats(false, guessed[0]);\n    }\n  } // gets player object for searched player\n\n\n  function getFilteredPlayer(id) {\n    let selected;\n    filtered.forEach(player => {\n      if (player.id === parseInt(id)) {\n        selected = player;\n      }\n    });\n    return selected;\n  }\n\n  function convert_height(height) {\n    const regex = /^(\\d)'\\s(\\d{1,2})\"$/;\n    const found = height.match(regex);\n    return parseInt(found[1]) * 12 + parseInt(found[2]);\n  }\n\n  function refresh() {\n    window.location.reload(false);\n  }\n\n  function saveStats(didWin, lastGuess) {\n    console.log(lastGuess);\n\n    if (localStorage.getItem(\"daily-hertl-stats\") === null) {\n      let object = {\n        currentStreak: 0,\n        maxStreak: 0,\n        won: 0,\n        played: 1,\n        one: 0,\n        two: 0,\n        three: 0,\n        four: 0,\n        five: 0,\n        six: 0,\n        seven: 0,\n        eight: 0\n      };\n      let ids = getGuessIds();\n      let final = [...ids, lastGuess.id];\n      object[date] = getGuessIds();\n\n      if (didWin) {\n        object.currentStreak += 1;\n        object.maxStreak += 1;\n        object.won += 1;\n\n        switch (guesses.length + 1) {\n          case 1:\n            object.one += 1;\n            break;\n\n          case 2:\n            object.two += 1;\n            break;\n\n          case 3:\n            object.three += 1;\n            break;\n\n          case 4:\n            object.four += 1;\n            break;\n\n          case 5:\n            object.five += 1;\n            break;\n\n          case 6:\n            object.six += 1;\n            break;\n\n          case 7:\n            object.seven += 1;\n            break;\n\n          case 8:\n            object.eight += 1;\n            break;\n\n          default:\n            refresh();\n            break;\n        }\n      }\n\n      localStorage.setItem(\"daily-hertl-stats\", JSON.stringify(object));\n    } else {\n      let object = JSON.parse(localStorage.getItem(\"daily-hertl-stats\"));\n      const guessList = getGuessIds();\n      console.log(guessList);\n      object[date] = guessList;\n      object.played += 1;\n\n      if (didWin) {\n        object.currentStreak += 1;\n        object.maxStreak += 1;\n        object.won += 1;\n\n        switch (guesses.length + 1) {\n          case 1:\n            object.one += 1;\n            break;\n\n          case 2:\n            object.two += 1;\n            break;\n\n          case 3:\n            object.three += 1;\n            break;\n\n          case 4:\n            object.four += 1;\n            break;\n\n          case 5:\n            object.five += 1;\n            break;\n\n          case 6:\n            object.six += 1;\n            break;\n\n          case 7:\n            object.seven += 1;\n            break;\n\n          case 8:\n            object.eight += 1;\n            break;\n\n          default:\n            refresh();\n            break;\n        }\n      }\n\n      localStorage.setItem(\"daily-hertl-stats\", JSON.stringify(object));\n    }\n  }\n\n  function getGuessIds() {\n    let list = [];\n    guesses.forEach(guess => {\n      list.push(guess.id);\n    });\n    return list;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [playing && /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"search-field\",\n          onChange: search,\n          placeholder: \"Guess \" + (guesses.length + 1) + \" of \" + maxGuesses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 25\n        }, this), searching && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: filtered.map(player => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                id: player.id,\n                onClick: guess,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + player.id + \".jpg\",\n                  alt: \"\",\n                  className: \"small-headshot\",\n                  id: player.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 96\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: player.id,\n                  children: [player.name, \", \", player.team]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 247\n                }, this)]\n              }, player.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 26\n        }, this), oneGuess && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"guesses-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Team\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Division\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Nationality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Height\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Weight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: guesses.map(guess => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.name_color,\n                    children: guess.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.team_color,\n                    children: guess.team\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.division_color,\n                    children: guess.division\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.nationality_color,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: require('./img/flags/' + guess.nationality + '.png'),\n                      alt: guess.nationality,\n                      id: \"flag\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 89\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.position_color,\n                    children: guess.position\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.number_color,\n                    children: guess.number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.age_color,\n                    children: guess.currentAge\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.height_color,\n                    children: guess.height\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.weight_color,\n                    children: guess.weight\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 49\n                  }, this)]\n                }, guess.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 22\n        }, this), won && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"won\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You guessed the player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 22\n        }, this), lost && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lost\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You lost. The player was \", correctPlayer.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 22\n        }, this), (lost || won) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refresh,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DailyHertl, \"WohS9X+sNZaysMKRv/lOPS4jjO8=\");\n\n_c = DailyHertl;\nexport default DailyHertl;\n\nvar _c;\n\n$RefreshReg$(_c, \"DailyHertl\");","map":{"version":3,"sources":["C:/Users/jango/Desktop/HERTL/hertl/src/DailyHertl.js"],"names":["React","useCallback","useEffect","useState","playerList","answerList","DailyHertl","props","correctPlayer","setCorrectPlayer","playing","setPlaying","searching","setSearching","filtered","setFiltered","guesses","setGuesses","oneGuess","setOneGuess","won","setWon","lost","setLost","date","setDate","maxGuesses","checkGuess","player","updated","checks","id","saveStats","correct","name","name_color","team","team_color","formerTeams","includes","division","division_color","conference","nationality","nationality_color","position","position_color","number","number_color","currentAge","age_color","guess_height","convert_height","height","correct_height","height_color","weight","weight_color","document","title","today","Date","getFullYear","getMonth","getDate","localStorage","getItem","getPlayer","stats","JSON","parse","ids","guessList","forEach","push","final","console","log","guess","selected","answer","search","event","val","target","value","length","toLowerCase","old","getElementById","guessed","getFilteredPlayer","parseInt","regex","found","match","refresh","window","location","reload","didWin","lastGuess","object","currentStreak","maxStreak","played","one","two","three","four","five","six","seven","eight","getGuessIds","setItem","stringify","list","map","require"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport './Hertl.css';\r\nimport playerList from './scraping/nhl_players.json';\r\nimport answerList from './scraping/answer_list.json';\r\n\r\nfunction DailyHertl(props) {\r\n    // state variables\r\n    const [correctPlayer, setCorrectPlayer] = useState();\r\n    const [playing, setPlaying] = useState(true);\r\n    const [searching, setSearching] = useState(false);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [guesses, setGuesses] = useState([]);\r\n    const [oneGuess, setOneGuess] = useState(false);\r\n    const [won, setWon] = useState(false);\r\n    const [lost, setLost] = useState(false);\r\n    const [date, setDate] = useState();\r\n\r\n    const maxGuesses = 8;\r\n\r\n    // checks guessed player object against the correct player\r\n    function checkGuess(player) {\r\n        let updated = checks(player, correctPlayer);\r\n\r\n        // guessed player\r\n        if (player.id === correctPlayer.id) {\r\n            setWon(true);\r\n            setPlaying(false);\r\n            saveStats(true, player);\r\n            return [updated, true];\r\n        }\r\n\r\n        return [updated, false];\r\n    }\r\n\r\n    const checks = useCallback((player, correct) => {\r\n        let updated = player;\r\n\r\n        if (player.name === correct.name) {\r\n            updated.name_color = \"green\";\r\n        }\r\n\r\n        if (player.team === correct.team) {\r\n            updated.team_color = \"green\";\r\n        } else if (correct.formerTeams.includes(player.team)) {\r\n            updated.team_color = \"yellow\"\r\n        }\r\n\r\n        if (player.division === correct.division) {\r\n            updated.division_color = \"green\";\r\n        } else if  (player.conference === correct.conference) {\r\n            updated.division_color = \"yellow\";\r\n        }\r\n\r\n        if (player.nationality === correct.nationality) {\r\n            updated.nationality_color = \"green\";\r\n        }\r\n\r\n        if (player.position === correct.position) {\r\n            updated.position_color = \"green\";\r\n        } else if (([\"LW\", \"C\", \"RW\"].includes(correct.position) && [\"LW\", \"C\", \"RW\"].includes(player.position))) {\r\n            updated.position_color = \"yellow\";\r\n        }\r\n\r\n        if (player.number === correct.number) {\r\n            updated.number_color = \"green\";\r\n        } else if (player.number >= (correct.number - 3) && player.number <= (correct.number + 3)) {\r\n            updated.number_color = \"yellow\";\r\n        }\r\n\r\n        if (player.currentAge === correct.currentAge) {\r\n            updated.age_color = \"green\";\r\n        } else if (player.currentAge >= (correct.currentAge - 3) && player.currentAge <= (correct.currentAge + 3)) {\r\n            updated.age_color = \"yellow\";\r\n        }\r\n\r\n        const guess_height = convert_height(player.height);\r\n        const correct_height = convert_height(correct.height);\r\n        if (guess_height === correct_height) {\r\n            updated.height_color = \"green\";\r\n        } else if (guess_height >= (correct_height - 3) && guess_height <= (correct_height + 3)) {\r\n            updated.height_color = \"yellow\";\r\n        }\r\n\r\n        if (player.weight === correct.weight) {\r\n            updated.weight_color = \"green\";\r\n        } else if (player.weight >= (correct.weight - 10) && player.weight <= (correct.weight + 10)) {\r\n            updated.weight_color = \"yellow\";\r\n        }\r\n\r\n        return updated;\r\n    }, []);\r\n\r\n    // update doc title\r\n    useEffect(() => {\r\n        document.title = props.title;\r\n\r\n        const today = new Date();\r\n        const date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\r\n\r\n        if (localStorage.getItem(\"daily-hertl-stats\") === null) {\r\n            setCorrectPlayer(getPlayer(date));\r\n            setDate(date);\r\n        } else {\r\n            const correct = getPlayer(date);\r\n            const stats = JSON.parse(localStorage.getItem(\"daily-hertl-stats\"));\r\n            if (date in stats) {\r\n                setPlaying(false);\r\n                setOneGuess(true);\r\n\r\n                let ids = stats[date];\r\n                let guessList = [];\r\n                ids.forEach((id) => {\r\n                    playerList.forEach((player) => {\r\n                        if (player.id === id) {\r\n                            guessList.push(player);\r\n                            return;\r\n                        }\r\n                    });\r\n                });\r\n                let final = [];\r\n\r\n                console.log(correct);\r\n                guessList.forEach((guess) => {\r\n                    final.push(checks(guess, correct));\r\n                });\r\n\r\n                setGuesses(final);\r\n            } else {\r\n                setCorrectPlayer(correct);\r\n                setDate(date);\r\n            }\r\n        }\r\n    }, [props.title, checks]);\r\n\r\n    // generates random player from player list\r\n    function getPlayer(date) {\r\n        let selected;\r\n        answerList.forEach((answer) => {\r\n            if (answer.date === date) {\r\n                selected = answer;\r\n            }\r\n        });\r\n        return selected;\r\n    }\r\n\r\n    // filter player list based on search inputted by user\r\n    function search(event) {\r\n        setFiltered([]);\r\n        const val = event.target.value;\r\n        if (val.length >= 3) {\r\n            setSearching(true);\r\n            playerList.forEach((player) => {\r\n                const name = player.name;\r\n                if (name.toLowerCase().includes(val.toLowerCase())) {\r\n                    setFiltered((old) => [...old, player]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // make a guess via selected search\r\n    function guess(event) {\r\n        setSearching(false);\r\n        setFiltered([]);\r\n        document.getElementById(\"search-field\").value = \"\";\r\n\r\n        let guessed = checkGuess(getFilteredPlayer(event.target.id));\r\n        setGuesses((old) => [...old, guessed[0]]);\r\n        if (!oneGuess) {\r\n            setOneGuess(true);\r\n        }\r\n\r\n        if (!guessed[1] && guesses.length >= (maxGuesses-1)) {\r\n            setPlaying(false);\r\n            setLost(true);\r\n            saveStats(false, guessed[0]);\r\n        }\r\n    }\r\n\r\n    // gets player object for searched player\r\n    function getFilteredPlayer(id) {\r\n        let selected;\r\n        filtered.forEach((player) => {\r\n            if (player.id === parseInt(id)) {\r\n                selected = player;\r\n            }\r\n        });\r\n        return selected;\r\n    }\r\n    \r\n    function convert_height(height) {\r\n        const regex = /^(\\d)'\\s(\\d{1,2})\"$/;\r\n        const found = height.match(regex);\r\n        return (parseInt(found[1]) * 12) + parseInt(found[2]);\r\n    }\r\n\r\n    function refresh() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    function saveStats(didWin, lastGuess) {\r\n        console.log(lastGuess);\r\n        if (localStorage.getItem(\"daily-hertl-stats\") === null) {\r\n            let object = {\r\n                currentStreak: 0,\r\n                maxStreak: 0,\r\n                won: 0,\r\n                played: 1,\r\n                one: 0,\r\n                two: 0,\r\n                three: 0,\r\n                four: 0,\r\n                five: 0,\r\n                six: 0,\r\n                seven: 0,\r\n                eight: 0\r\n            };\r\n\r\n            let ids = getGuessIds();\r\n            let final = [...ids, lastGuess.id];\r\n            object[date] = getGuessIds();\r\n            \r\n            if (didWin) {\r\n                object.currentStreak += 1;\r\n                object.maxStreak += 1;\r\n                object.won += 1;\r\n                switch(guesses.length + 1) {\r\n                    case 1:\r\n                        object.one += 1;\r\n                        break;\r\n                    case 2:\r\n                        object.two += 1;\r\n                        break;\r\n                    case 3:\r\n                        object.three += 1;\r\n                        break;\r\n                    case 4:\r\n                        object.four += 1;\r\n                        break;\r\n                    case 5:\r\n                        object.five += 1;\r\n                        break;\r\n                    case 6:\r\n                        object.six += 1;\r\n                        break;\r\n                    case 7:\r\n                        object.seven += 1;\r\n                        break;\r\n                    case 8:\r\n                        object.eight += 1;\r\n                        break;\r\n                    default:\r\n                        refresh()\r\n                        break;\r\n                }\r\n            }\r\n\r\n            localStorage.setItem(\"daily-hertl-stats\", JSON.stringify(object));\r\n        } else {\r\n            let object = JSON.parse(localStorage.getItem(\"daily-hertl-stats\"));\r\n            const guessList = getGuessIds();\r\n            console.log(guessList);\r\n            object[date] = guessList;\r\n            object.played += 1;\r\n\r\n            if (didWin) {\r\n                object.currentStreak += 1;\r\n                object.maxStreak += 1;\r\n                object.won += 1;\r\n                switch(guesses.length + 1) {\r\n                    case 1:\r\n                        object.one += 1;\r\n                        break;\r\n                    case 2:\r\n                        object.two += 1;\r\n                        break;\r\n                    case 3:\r\n                        object.three += 1;\r\n                        break;\r\n                    case 4:\r\n                        object.four += 1;\r\n                        break;\r\n                    case 5:\r\n                        object.five += 1;\r\n                        break;\r\n                    case 6:\r\n                        object.six += 1;\r\n                        break;\r\n                    case 7:\r\n                        object.seven += 1;\r\n                        break;\r\n                    case 8:\r\n                        object.eight += 1;\r\n                        break;\r\n                    default:\r\n                        refresh()\r\n                        break;\r\n                }\r\n            }\r\n\r\n            localStorage.setItem(\"daily-hertl-stats\", JSON.stringify(object));\r\n        }\r\n    }\r\n\r\n    function getGuessIds() {\r\n        let list = [];\r\n        guesses.forEach((guess) => {\r\n            list.push(guess.id);\r\n        });\r\n        return list;\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <div className=\"game\">\r\n                    {playing &&\r\n                        <input id=\"search-field\" onChange={search} placeholder={\"Guess \" + (guesses.length + 1) + \" of \" + maxGuesses} />\r\n                    }\r\n                    {searching &&\r\n                        (<div className=\"search-results\">\r\n                            <ul>\r\n                                {\r\n                                    filtered.map((player) => {\r\n                                        return (\r\n                                            <li key={player.id} id={player.id} onClick={guess}><img src={\"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + player.id + \".jpg\"} alt=\"\" className=\"small-headshot\" id={player.id}></img><p id={player.id}>{player.name}, {player.team}</p></li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>)\r\n                    }\r\n                    {oneGuess &&\r\n                    (<div id=\"guesses-table\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Team</th>\r\n                                    <th>Division</th>\r\n                                    <th>Nationality</th>\r\n                                    <th>Position</th>\r\n                                    <th>Number</th>\r\n                                    <th>Age</th>\r\n                                    <th>Height</th>\r\n                                    <th>Weight</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    guesses.map((guess) => {\r\n                                        return (\r\n                                            <tr key={guess.id}>\r\n                                                <td className={guess.name_color}>{guess.name}</td>\r\n                                                <td className={guess.team_color}>{guess.team}</td>\r\n                                                <td className={guess.division_color}>{guess.division}</td>\r\n                                                <td className={guess.nationality_color}><img src={require('./img/flags/' + guess.nationality + '.png')} alt={guess.nationality} id=\"flag\"></img></td>\r\n                                                <td className={guess.position_color}>{guess.position}</td>\r\n                                                <td className={guess.number_color}>{guess.number}</td>\r\n                                                <td className={guess.age_color}>{guess.currentAge}</td>\r\n                                                <td className={guess.height_color}>{guess.height}</td>\r\n                                                <td className={guess.weight_color}>{guess.weight}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>)\r\n                    }\r\n                    {won && \r\n                    (<div id=\"won\">\r\n                        <p>You guessed the player</p>\r\n                    </div>)\r\n                    }\r\n                    {lost &&\r\n                    (<div id=\"lost\">\r\n                        <p>You lost. The player was {correctPlayer.name}</p>\r\n                    </div>)\r\n                    }\r\n                    {(lost || won) &&\r\n                    <button onClick={refresh}>Play Again</button> \r\n                    }\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default DailyHertl;"]},"metadata":{},"sourceType":"module"}