{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jango\\\\Desktop\\\\HNUH300 Project\\\\hnuh300-project\\\\src\\\\Hertl.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Hertl.css';\nimport playerList from './scraping/nhl_players.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hertl(props) {\n  _s();\n\n  const [filtered, setFiltered] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  useEffect(() => {\n    document.title = props.title;\n  }, [props.title]);\n\n  function search(event) {\n    setFiltered([]);\n    const val = event.target.value;\n\n    if (val.length >= 3) {\n      playerList.forEach(player => {\n        const name = player.name;\n\n        if (name.toLowerCase().includes(val.toLowerCase())) {\n          setFiltered(old => [...old, player]);\n        }\n      });\n    }\n  }\n\n  function guess(event) {\n    setFiltered([]);\n    document.getElementById(\"search-field\").value = \"\";\n    const guessed = getFilteredPlayer(event.target.id);\n    setGuesses(old => [...old, guessed]);\n  }\n\n  function getFilteredPlayer(id) {\n    let selected;\n    filtered.forEach(player => {\n      if (player.id === parseInt(id)) {\n        selected = player;\n      }\n    });\n    return selected;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-field\",\n        onChange: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"searchResults\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: filtered.map(player => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              id: player.id,\n              onClick: guess,\n              children: player.name\n            }, player.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"guesses-table\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: guesses.map(guess => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: guess.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 45\n                }, this)\n              }, guess.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hertl, \"C+7c7+O3mPHnAYsYcbXSukekxcs=\");\n\n_c = Hertl;\nexport default Hertl;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hertl\");","map":{"version":3,"sources":["C:/Users/jango/Desktop/HNUH300 Project/hnuh300-project/src/Hertl.js"],"names":["React","useEffect","useState","playerList","Hertl","props","filtered","setFiltered","guesses","setGuesses","document","title","search","event","val","target","value","length","forEach","player","name","toLowerCase","includes","old","guess","getElementById","guessed","getFilteredPlayer","id","selected","parseInt","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './Hertl.css';\r\nimport playerList from './scraping/nhl_players.json';\r\n\r\nfunction Hertl(props) {\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [guesses, setGuesses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        document.title = props.title;\r\n    }, [props.title]);\r\n\r\n    function search(event) {\r\n        setFiltered([]);\r\n        const val = event.target.value;\r\n        if (val.length >= 3) {\r\n            playerList.forEach((player) => {\r\n                const name = player.name;\r\n                if (name.toLowerCase().includes(val.toLowerCase())) {\r\n                    setFiltered((old) => [...old, player]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    function guess(event) {\r\n        setFiltered([]);\r\n        document.getElementById(\"search-field\").value = \"\";\r\n\r\n        const guessed = getFilteredPlayer(event.target.id);\r\n        setGuesses((old) => [...old, guessed]);\r\n    }\r\n\r\n    function getFilteredPlayer(id) {\r\n        let selected;\r\n        filtered.forEach((player) => {\r\n            if (player.id === parseInt(id)) {\r\n                selected = player;\r\n            }\r\n        });\r\n        return selected;\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div id=\"container\">\r\n                <input id=\"search-field\" onChange={search} />\r\n                <div id=\"searchResults\">\r\n                    <ul>\r\n                        {\r\n                            filtered.map((player) => {\r\n                                return (\r\n                                    <li key={player.id} id={player.id} onClick={guess}>{player.name}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div id=\"guesses-table\">\r\n                    <table>\r\n                        <tbody>\r\n                            {\r\n                                guesses.map((guess) => {\r\n                                    return (\r\n                                        <tr key={guess.id}>\r\n                                            <td>{guess.name}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Hertl;"]},"metadata":{},"sourceType":"module"}