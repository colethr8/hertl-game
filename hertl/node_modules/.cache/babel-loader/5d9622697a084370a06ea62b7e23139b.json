{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jango\\\\Desktop\\\\HERTL\\\\hertl\\\\src\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [playing, setPlaying] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [correct, setCorrect] = useState(false);\n  const [lost, setLost] = useState(false);\n  const [score, setScore] = useState(0);\n  const [playerOne, setPlayerOne] = useState(null);\n  const [playerOneName, setPlayerOneName] = useState(\"\");\n  const [playerOneTeam, setPlayerOneTeam] = useState(\"\");\n  const [playerOnePosition, setPlayerOnePosition] = useState(\"\");\n  const [playerOneStat, setPlayerOneStat] = useState(0);\n  const [playerOneHeadshot, setPlayerOneHeadshot] = useState(\"\");\n  const [playerTwo, setPlayerTwo] = useState(null);\n  const [playerTwoName, setPlayerTwoName] = useState(\"\");\n  const [playerTwoTeam, setPlayerTwoTeam] = useState(\"\");\n  const [playerTwoPosition, setPlayerTwoPosition] = useState(\"\");\n  const [playerTwoStat, setPlayerTwoStat] = useState(0);\n  const [playerTwoHeadshot, setPlayerTwoHeadshot] = useState(\"\");\n  const [prevName, setPrevName] = useState(\"\");\n  const [prevStat, setPrevStat] = useState(0);\n  const type = props.type;\n  const playerList = props.playerList;\n  const chosenStat = props.stat;\n  const season = props.season;\n\n  async function play() {\n    setLoading(true);\n    const originalPlayers = getOriginalPlayers();\n    const player1 = originalPlayers[0];\n    const player1Name = player1[1].person.fullName;\n    const player1Team = await getTeam(player1[0]);\n    const player1Position = await getPosition(player1[1]);\n    const player1Stat = await getStat(player1);\n    const player2 = originalPlayers[1];\n    const player2Name = player2[1].person.fullName;\n    const player2Team = await getTeam(player2[0]);\n    const player2Position = await getPosition(player2[1]);\n    const player2Stat = await getStat(player2);\n    setPlayerOne(player1);\n    setPlayerOneName(player1Name);\n    setPlayerOneTeam(player1Team);\n    setPlayerOnePosition(player1Position);\n    setPlayerOneStat(player1Stat);\n    setPlayerOneHeadshot(\"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + player1[0].id + \".jpg\");\n    setPlayerTwo(player2);\n    setPlayerTwoName(player2Name);\n    setPlayerTwoTeam(player2Team);\n    setPlayerTwoPosition(player2Position);\n    setPlayerTwoStat(player2Stat);\n    setPlayerTwoHeadshot(\"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + player2[0].id + \".jpg\");\n    setPlaying(true);\n    setLoading(false);\n  }\n\n  async function getTeam(id) {\n    let teamName = \"\";\n\n    switch (type) {\n      case \"NHL\":\n        const json = await getJSON(\"https://statsapi.web.nhl.com/api/v1/teams/\" + id);\n        teamName = json.teams[0].name;\n        break;\n\n      case \"NBA\":\n        break;\n\n      default:\n        break;\n    }\n\n    return teamName;\n  }\n\n  async function getPosition(player) {\n    let position = \"\";\n\n    switch (type) {\n      case \"NHL\":\n        position = player.position.abbreviation;\n        break;\n\n      case \"NBA\":\n        break;\n\n      default:\n        break;\n    }\n\n    return position;\n  }\n\n  async function getStat(player) {\n    let returnVal = 0;\n\n    switch (type) {\n      case \"NHL\":\n        const id = player[1].person.id;\n        const json = await getJSON(\"https://statsapi.web.nhl.com/api/v1/people/\" + id + \"/stats?stats=statsSingleSeason&season=\" + season);\n\n        switch (chosenStat) {\n          case \"points\":\n            try {\n              returnVal = json.stats[0].splits[0].stat.goals + json.stats[0].splits[0].stat.assists;\n            } catch (err) {\n              returnVal = 0;\n            }\n\n            break;\n\n          case \"goals\":\n            try {\n              returnVal = json.stats[0].splits[0].stat.goals;\n            } catch (err) {\n              returnVal = 0;\n            }\n\n            break;\n\n          case \"assists\":\n            try {\n              returnVal = json.stats[0].splits[0].stat.assists;\n            } catch (err) {\n              returnVal = 0;\n            }\n\n            break;\n\n          default:\n            break;\n        }\n\n        break;\n\n      case \"NBA\":\n        break;\n\n      default:\n        break;\n    }\n\n    return returnVal;\n  }\n\n  async function getJSON(url) {\n    return fetch(url).then(response => response.json()).then(responseJSON => {\n      return responseJSON;\n    });\n  }\n\n  function getOriginalPlayers() {\n    const index1 = Math.floor(Math.random() * (playerList.length + 1));\n    const player1 = playerList[index1];\n    let index2 = Math.floor(Math.random() * (playerList.length + 1));\n\n    while (index1 === index2) {\n      index2 = Math.floor(Math.random() * (playerList.length + 1));\n    }\n\n    const player2 = playerList[index2];\n    return [player1, player2];\n  }\n\n  function higher() {\n    if (playerTwoStat >= playerOneStat) {\n      setLoading(true);\n      swap();\n      setCorrect(true);\n      setScore(prevScore => prevScore + 1);\n      setLoading(false);\n    } else {\n      setCorrect(false);\n      setLost(true);\n    }\n  }\n\n  function lower() {\n    if (playerTwoStat <= playerOneStat) {\n      setLoading(true);\n      swap();\n      setCorrect(true);\n      setScore(prevScore => prevScore + 1);\n      setLoading(false);\n    } else {\n      setCorrect(false);\n      setLost(true);\n    }\n  }\n\n  async function swap() {\n    const prevNameTemp = playerOneName;\n    const prevStatTemp = playerOneStat;\n    let newPlayer = getNewPlayer();\n\n    while (newPlayer === playerTwo) {\n      newPlayer = getNewPlayer();\n    }\n\n    const newPlayerName = newPlayer[1].person.fullName;\n    const newPlayerTeam = await getTeam(newPlayer[0]);\n    const newPlayerPosition = await getPosition(newPlayer[1]);\n    const newPlayerStat = await getStat(newPlayer);\n    setPrevName(prevNameTemp);\n    setPrevStat(prevStatTemp);\n    setPlayerOne(playerTwo);\n    setPlayerOneName(playerTwoName);\n    setPlayerOneTeam(playerTwoTeam);\n    setPlayerOnePosition(playerTwoPosition);\n    setPlayerOneStat(playerTwoStat);\n    setPlayerTwo(newPlayer);\n    setPlayerTwoName(newPlayerName);\n    setPlayerTwoTeam(newPlayerTeam);\n    setPlayerTwoPosition(newPlayerPosition);\n    setPlayerTwoStat(newPlayerStat);\n  }\n\n  function getNewPlayer() {\n    let player;\n\n    switch (type) {\n      case \"NHL\":\n        const index = Math.floor(Math.random() * (playerList.length + 1));\n        player = playerList[index];\n        break;\n\n      case \"NBA\":\n        break;\n\n      default:\n        break;\n    }\n\n    return player;\n  }\n\n  function playAgain() {\n    setScore(0);\n    setPlaying(false);\n    setLost(false);\n  }\n\n  function refresh() {\n    window.location.reload(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loading && !playing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Player List Loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: play,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this), !loading && playing && type === \"NHL\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nhl-game\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"even-columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-col-container\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: playerOneName,\n              team: playerOneTeam,\n              position: playerOnePosition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"middle\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this), !lost && correct && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"correct\",\n              children: \"Correct\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 37\n            }, this), !lost && correct && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [prevName, \": \", prevStat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 37\n            }, this), !lost && correct && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [playerOneName, \": \", playerOneStat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 37\n            }, this), !lost && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [playerTwoName, \" higher or lower than \", playerOneName, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 37\n            }, this), !lost && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: higher,\n                children: \"Higher\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: lower,\n                children: \"Lower\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 37\n            }, this), lost && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: playAgain,\n                children: \"Play Again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: refresh,\n                children: \"Change Settings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-col-container\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: playerTwoName,\n              team: playerTwoTeam,\n              position: playerTwoPosition,\n              headshot: playerTwoHeadshot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }, this), console.log(playerTwo)]\n  }, void 0, true);\n}\n\n_s(Game, \"AII3fMsPRt9RJSUxs9A1zbA+Vz8=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/jango/Desktop/HERTL/hertl/src/Game.js"],"names":["React","useState","Card","Game","props","playing","setPlaying","loading","setLoading","correct","setCorrect","lost","setLost","score","setScore","playerOne","setPlayerOne","playerOneName","setPlayerOneName","playerOneTeam","setPlayerOneTeam","playerOnePosition","setPlayerOnePosition","playerOneStat","setPlayerOneStat","playerOneHeadshot","setPlayerOneHeadshot","playerTwo","setPlayerTwo","playerTwoName","setPlayerTwoName","playerTwoTeam","setPlayerTwoTeam","playerTwoPosition","setPlayerTwoPosition","playerTwoStat","setPlayerTwoStat","playerTwoHeadshot","setPlayerTwoHeadshot","prevName","setPrevName","prevStat","setPrevStat","type","playerList","chosenStat","stat","season","play","originalPlayers","getOriginalPlayers","player1","player1Name","person","fullName","player1Team","getTeam","player1Position","getPosition","player1Stat","getStat","player2","player2Name","player2Team","player2Position","player2Stat","id","teamName","json","getJSON","teams","name","player","position","abbreviation","returnVal","stats","splits","goals","assists","err","url","fetch","then","response","responseJSON","index1","Math","floor","random","length","index2","higher","swap","prevScore","lower","prevNameTemp","prevStatTemp","newPlayer","getNewPlayer","newPlayerName","newPlayerTeam","newPlayerPosition","newPlayerStat","index","playAgain","refresh","window","location","reload","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Game(props) {\r\n    const [playing, setPlaying] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [correct, setCorrect] = useState(false);\r\n    const [lost, setLost] = useState(false);\r\n\r\n    const [score, setScore] = useState(0);\r\n\r\n    const [playerOne, setPlayerOne] = useState(null);\r\n    const [playerOneName, setPlayerOneName] = useState(\"\");\r\n    const [playerOneTeam, setPlayerOneTeam] = useState(\"\");\r\n    const [playerOnePosition, setPlayerOnePosition] = useState(\"\");\r\n    const [playerOneStat, setPlayerOneStat] = useState(0);\r\n    const [playerOneHeadshot, setPlayerOneHeadshot] = useState(\"\");\r\n\r\n    const [playerTwo, setPlayerTwo] = useState(null);\r\n    const [playerTwoName, setPlayerTwoName] = useState(\"\");\r\n    const [playerTwoTeam, setPlayerTwoTeam] = useState(\"\");\r\n    const [playerTwoPosition, setPlayerTwoPosition] = useState(\"\");\r\n    const [playerTwoStat, setPlayerTwoStat] = useState(0);\r\n    const [playerTwoHeadshot, setPlayerTwoHeadshot] = useState(\"\");\r\n\r\n    const [prevName, setPrevName] = useState(\"\");\r\n    const [prevStat, setPrevStat] = useState(0);\r\n\r\n    const type = props.type;\r\n    const playerList = props.playerList;\r\n    const chosenStat = props.stat;\r\n    const season = props.season;\r\n\r\n    async function play() {\r\n        setLoading(true);\r\n\r\n        const originalPlayers = getOriginalPlayers();\r\n\r\n        const player1 = originalPlayers[0];\r\n        const player1Name = player1[1].person.fullName;\r\n        const player1Team = await getTeam(player1[0]);\r\n        const player1Position = await getPosition(player1[1]);\r\n        const player1Stat = await getStat(player1);\r\n\r\n        const player2 = originalPlayers[1];\r\n        const player2Name = player2[1].person.fullName;\r\n        const player2Team = await getTeam(player2[0]);\r\n        const player2Position = await getPosition(player2[1]);\r\n        const player2Stat = await getStat(player2);\r\n\r\n        setPlayerOne(player1);\r\n        setPlayerOneName(player1Name);\r\n        setPlayerOneTeam(player1Team);\r\n        setPlayerOnePosition(player1Position);\r\n        setPlayerOneStat(player1Stat);\r\n        setPlayerOneHeadshot(\"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + player1[0].id + \".jpg\")\r\n\r\n        setPlayerTwo(player2);\r\n        setPlayerTwoName(player2Name);\r\n        setPlayerTwoTeam(player2Team);\r\n        setPlayerTwoPosition(player2Position);\r\n        setPlayerTwoStat(player2Stat);\r\n        setPlayerTwoHeadshot(\"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + player2[0].id + \".jpg\")\r\n\r\n        setPlaying(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    async function getTeam(id) {\r\n        let teamName = \"\";\r\n        \r\n        switch(type) {\r\n            case \"NHL\":\r\n                const json = await getJSON(\"https://statsapi.web.nhl.com/api/v1/teams/\" + id);\r\n                teamName = json.teams[0].name;\r\n                break;\r\n            case \"NBA\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return teamName;\r\n    }\r\n\r\n    async function getPosition(player) {\r\n        let position = \"\";\r\n        \r\n        switch(type) {\r\n            case \"NHL\":\r\n                position = player.position.abbreviation;\r\n                break;\r\n            case \"NBA\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return position;\r\n    }\r\n\r\n    async function getStat(player) {\r\n        let returnVal = 0;\r\n\r\n        switch(type) {\r\n            case \"NHL\":\r\n                const id = player[1].person.id;\r\n                const json = await getJSON(\"https://statsapi.web.nhl.com/api/v1/people/\" + id + \"/stats?stats=statsSingleSeason&season=\" + season);\r\n                \r\n                switch(chosenStat) {\r\n                    case \"points\":\r\n                        try {\r\n                            returnVal = json.stats[0].splits[0].stat.goals + json.stats[0].splits[0].stat.assists;\r\n                        } catch (err) {\r\n                            returnVal = 0;\r\n                        }\r\n\r\n                        break;\r\n                    case \"goals\":\r\n                        try {\r\n                            returnVal = json.stats[0].splits[0].stat.goals;\r\n                        } catch (err) {\r\n                            returnVal = 0;\r\n                        }\r\n\r\n                        break;\r\n                    case \"assists\":\r\n                        try {\r\n                            returnVal = json.stats[0].splits[0].stat.assists;\r\n                        } catch (err) {\r\n                            returnVal = 0;\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                break;\r\n            case \"NBA\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return returnVal;\r\n    }\r\n\r\n    async function getJSON(url) {\r\n        return fetch(url)\r\n            .then((response) => response.json())\r\n            .then((responseJSON) => {\r\n                return responseJSON;\r\n            });\r\n    }\r\n\r\n    function getOriginalPlayers() {\r\n            const index1 = Math.floor(Math.random() * (playerList.length + 1));\r\n            const player1 = playerList[index1];\r\n\r\n            let index2 = Math.floor(Math.random() * (playerList.length + 1));\r\n            while (index1 === index2) {\r\n                index2 = Math.floor(Math.random() * (playerList.length + 1));\r\n            }\r\n            const player2 = playerList[index2];\r\n\r\n            return [player1, player2];\r\n    }\r\n\r\n    function higher() {\r\n        if (playerTwoStat >= playerOneStat) {\r\n            setLoading(true);\r\n            swap();\r\n            setCorrect(true);\r\n            setScore((prevScore) => prevScore + 1);\r\n            setLoading(false);\r\n        } else {\r\n            setCorrect(false);\r\n            setLost(true);\r\n        }\r\n    }\r\n\r\n    function lower() {\r\n        if (playerTwoStat <= playerOneStat) {\r\n            setLoading(true);\r\n            swap();\r\n            setCorrect(true);\r\n            setScore((prevScore) => prevScore + 1);\r\n            setLoading(false);\r\n        } else {\r\n            setCorrect(false);\r\n            setLost(true);\r\n        }\r\n    }\r\n\r\n    async function swap() {\r\n        const prevNameTemp = playerOneName;\r\n        const prevStatTemp = playerOneStat;\r\n\r\n        let newPlayer = getNewPlayer();\r\n        while (newPlayer === playerTwo) {\r\n            newPlayer = getNewPlayer();\r\n        }\r\n        const newPlayerName = newPlayer[1].person.fullName;\r\n        const newPlayerTeam = await getTeam(newPlayer[0]);\r\n        const newPlayerPosition = await getPosition(newPlayer[1]);\r\n        const newPlayerStat = await getStat(newPlayer);\r\n\r\n        setPrevName(prevNameTemp);\r\n        setPrevStat(prevStatTemp);\r\n\r\n        setPlayerOne(playerTwo);\r\n        setPlayerOneName(playerTwoName);\r\n        setPlayerOneTeam(playerTwoTeam);\r\n        setPlayerOnePosition(playerTwoPosition);\r\n        setPlayerOneStat(playerTwoStat);\r\n\r\n        setPlayerTwo(newPlayer);\r\n        setPlayerTwoName(newPlayerName);\r\n        setPlayerTwoTeam(newPlayerTeam);\r\n        setPlayerTwoPosition(newPlayerPosition);\r\n        setPlayerTwoStat(newPlayerStat);\r\n    }\r\n\r\n    function getNewPlayer() {\r\n        let player;\r\n\r\n        switch(type) {\r\n            case \"NHL\":\r\n                const index = Math.floor(Math.random() * (playerList.length + 1));\r\n                player = playerList[index];\r\n                break;\r\n            case \"NBA\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return player;\r\n    }\r\n\r\n    function playAgain() {\r\n        setScore(0);\r\n        setPlaying(false);\r\n        setLost(false);\r\n    }\r\n\r\n    function refresh() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!loading && !playing && \r\n                <div className=\"loading\">\r\n                    <div className=\"loading-content\">\r\n                        <h1>Player List Loaded</h1>\r\n                        <button onClick={play}>Play</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {loading &&\r\n                <div className=\"loading\">\r\n                    <div className=\"loading-content\">\r\n                        <p>Loading...</p>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {!loading && playing && type === \"NHL\" &&\r\n                <div className=\"nhl-game\">\r\n                    <div className=\"even-columns\">\r\n                        <div className=\"card-col\">\r\n                            <div className=\"card-col-container\">\r\n                                <Card name={playerOneName} team={playerOneTeam} position={playerOnePosition} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <div className=\"middle\">\r\n                                <p>Score: {score}</p>\r\n\r\n                                {!lost && correct && \r\n                                    <p className=\"correct\">Correct</p>\r\n                                }\r\n\r\n                                {!lost && correct && \r\n                                    <p>{prevName}: {prevStat}</p>\r\n                                }\r\n\r\n                                {!lost && correct &&\r\n                                    <p>{playerOneName}: {playerOneStat}</p>\r\n                                }\r\n\r\n                                {!lost && \r\n                                    <p>{playerTwoName} higher or lower than {playerOneName}?</p>\r\n                                }\r\n\r\n                                {!lost && \r\n                                    <div className=\"button-group\">\r\n                                        <button onClick={higher}>Higher</button>\r\n                                        <button onClick={lower}>Lower</button>\r\n                                    </div>\r\n                                }\r\n\r\n                                {lost && \r\n                                    <div className = \"button-group\">\r\n                                        <button onClick={playAgain}>Play Again</button>\r\n                                        <button onClick={refresh}>Change Settings</button>\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-col\">\r\n                            <div className=\"card-col-container\">\r\n                                <Card name={playerTwoName} team={playerTwoTeam} position={playerTwoPosition} headshot={playerTwoHeadshot} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {console.log(playerTwo)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}