{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jango\\\\Desktop\\\\HERTL\\\\hertl\\\\src\\\\NHL.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport Game from \"./Game\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NHL(props) {\n  _s();\n\n  // \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + playerOne[0].id + \".jpg\"\n  const [loading, setLoading] = useState(false);\n  const [playing, setPlaying] = useState(false);\n  const [goaliesSelected, setGoaliesSelected] = useState(false);\n  const [playerList, setPlayerList] = useState([]);\n  const [stat, setStat] = useState(\"\");\n  const [season, setSeason] = useState(\"\");\n  useEffect(() => {\n    document.title = props.title;\n  }, [props.title]);\n\n  function positionSelectHandler() {\n    const selected = document.getElementById(\"position-selector\").value;\n\n    if (goaliesSelected === true) {\n      if (selected !== \"goalies\") {\n        setGoaliesSelected(false);\n      }\n    } else {\n      if (selected === \"goalies\") {\n        setGoaliesSelected(true);\n      }\n    }\n  }\n\n  async function play() {\n    const seasonNum1 = parseInt(document.getElementById(\"season\").value);\n\n    if (isNaN(seasonNum1) || seasonNum1 < 1918 || seasonNum1 > 2022) {\n      window.alert(\"Please enter a valid year\");\n    } else {\n      setLoading(true);\n      const pos = document.getElementById(\"position-selector\").value;\n      const statType = document.getElementById(\"stat-type\").value;\n      setStat(statType);\n      const seasonNum2 = seasonNum1 - 1;\n      const seasonNum = \"\" + seasonNum2 + seasonNum1;\n      setSeason(seasonNum);\n      await getPlayerList(pos, seasonNum);\n      setPlaying(true);\n      setLoading(false);\n    }\n  }\n\n  async function getPlayerList(position, season) {\n    const rosterJSON = await getJSON(\"https://statsapi.web.nhl.com/api/v1/teams?expand=team.roster&season=\" + season);\n    const teams = rosterJSON.teams;\n    teams.forEach(team => {\n      const id = team.id;\n      const teamRoster = team.roster.roster;\n\n      switch (position) {\n        case \"skaters\":\n          sortSkaters(teamRoster, id);\n          break;\n\n        case \"forwards\":\n          sortForwards(teamRoster, id);\n          break;\n\n        case \"defensemen\":\n          sortDefensemen(teamRoster, id);\n          break;\n\n        case \"goalies\":\n          sortGoalies(teamRoster, id);\n          break;\n\n        default:\n          refresh();\n          break;\n      }\n    });\n  }\n\n  function sortSkaters(roster, id) {\n    roster.forEach(player => {\n      if (player.position.type === \"Forward\" || player.position.type === \"Defenseman\") {\n        setPlayerList(oldList => [...oldList, [id, player]]);\n      }\n    });\n  }\n\n  function sortForwards(roster, id) {\n    roster.forEach(player => {\n      if (player.position.type === \"Forward\") {\n        setPlayerList(oldList => [...oldList, [id, player]]);\n      }\n    });\n  }\n\n  function sortDefensemen(roster, id) {\n    roster.forEach(player => {\n      if (player.position.type === \"Defenseman\") {\n        setPlayerList(oldList => [...oldList, [id, player]]);\n      }\n    });\n  }\n\n  function sortGoalies(roster, id) {\n    roster.forEach(player => {\n      if (player.position.type === \"Goalie\") {\n        setPlayerList(oldList => [...oldList, [id, player]]);\n      }\n    });\n  }\n\n  async function getJSON(url) {\n    return fetch(url).then(response => response.json()).then(responseJSON => {\n      return responseJSON;\n    });\n  }\n\n  function refresh() {\n    window.location.reload(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!playing && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play-menu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"play-menu-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"NHL Higher/Lower\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"\",\n              children: \"Position:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"position-selector\",\n              name: \"position-selector\",\n              onChange: positionSelectHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"skaters\",\n                children: \"All Skaters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"forwards\",\n                children: \"Forwards\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"defensemen\",\n                children: \"Defensemen\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"goalies\",\n                children: \"Goalies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"stat-type\",\n              className: \"label-padding\",\n              children: \"Stat:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this), !goaliesSelected && /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"stat-type\",\n              name: \"stat-type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"points\",\n                children: \"Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"goals\",\n                children: \"Goals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"assists\",\n                children: \"Assists\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this), goaliesSelected && /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"stat-type\",\n              name: \"stat-type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"wins\",\n                children: \"Wins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"savePercentage\",\n                children: \"Save Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"goalsAgainstAverage\",\n                children: \"Goals Against Average\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"saves\",\n                children: \"Saves\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"season\",\n              className: \"label-padding\",\n              children: \"Season (1918-2022):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"season\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: play,\n              className: \"play-btn\",\n              children: \"Load Players\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), !playing && loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this), playing && !loading && stat !== \"\" && /*#__PURE__*/_jsxDEV(Game, {\n        type: \"NHL\",\n        playerList: playerList,\n        stat: stat,\n        season: season,\n        goalie: goaliesSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NHL, \"7XQM3cK3jb1atSMd70XxwFDS94U=\");\n\n_c = NHL;\nexport default NHL;\n\nvar _c;\n\n$RefreshReg$(_c, \"NHL\");","map":{"version":3,"sources":["C:/Users/jango/Desktop/HERTL/hertl/src/NHL.js"],"names":["React","useEffect","useState","Nav","Game","NHL","props","loading","setLoading","playing","setPlaying","goaliesSelected","setGoaliesSelected","playerList","setPlayerList","stat","setStat","season","setSeason","document","title","positionSelectHandler","selected","getElementById","value","play","seasonNum1","parseInt","isNaN","window","alert","pos","statType","seasonNum2","seasonNum","getPlayerList","position","rosterJSON","getJSON","teams","forEach","team","id","teamRoster","roster","sortSkaters","sortForwards","sortDefensemen","sortGoalies","refresh","player","type","oldList","url","fetch","then","response","json","responseJSON","location","reload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport Game from \"./Game\";\r\n\r\n\r\nfunction NHL(props) {\r\n    // \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/\" + playerOne[0].id + \".jpg\"\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [playing, setPlaying] = useState(false);\r\n    const [goaliesSelected, setGoaliesSelected] = useState(false);\r\n    const [playerList, setPlayerList] = useState([]);\r\n    const [stat, setStat] = useState(\"\");\r\n    const [season, setSeason] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        document.title = props.title;\r\n    }, [props.title]);\r\n\r\n    function positionSelectHandler() {\r\n        const selected = document.getElementById(\"position-selector\").value;\r\n\r\n        if (goaliesSelected === true) {\r\n            if (selected !== \"goalies\") {\r\n                setGoaliesSelected(false);\r\n            }\r\n        } else {\r\n            if (selected === \"goalies\") {\r\n                setGoaliesSelected(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function play() {\r\n        const seasonNum1 = parseInt(document.getElementById(\"season\").value);\r\n\r\n        if (isNaN(seasonNum1) || seasonNum1 < 1918 || seasonNum1 > 2022) {\r\n            window.alert(\"Please enter a valid year\");\r\n        } else {\r\n            setLoading(true);\r\n\r\n            const pos = document.getElementById(\"position-selector\").value;\r\n\r\n            const statType = document.getElementById(\"stat-type\").value;\r\n            setStat(statType);\r\n            \r\n            const seasonNum2 = seasonNum1 - 1;\r\n            const seasonNum = \"\" + seasonNum2 + seasonNum1;\r\n            setSeason(seasonNum);\r\n\r\n            await getPlayerList(pos, seasonNum);\r\n\r\n            setPlaying(true);\r\n            setLoading(false);\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    async function getPlayerList(position, season) {\r\n        const rosterJSON = await getJSON(\"https://statsapi.web.nhl.com/api/v1/teams?expand=team.roster&season=\" + season);\r\n        const teams = rosterJSON.teams;\r\n\r\n        teams.forEach((team) => {\r\n            const id = team.id;\r\n            const teamRoster = team.roster.roster;\r\n\r\n            switch(position) {\r\n                case \"skaters\":\r\n                    sortSkaters(teamRoster, id);\r\n                    break;\r\n                case \"forwards\":\r\n                    sortForwards(teamRoster, id);\r\n                    break;\r\n                case \"defensemen\":\r\n                    sortDefensemen(teamRoster, id);\r\n                    break;\r\n                case \"goalies\":\r\n                    sortGoalies(teamRoster, id);\r\n                    break;\r\n                default:\r\n                    refresh();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    function sortSkaters(roster, id) {\r\n        roster.forEach((player) => {\r\n            if (player.position.type === \"Forward\" || player.position.type === \"Defenseman\") {\r\n                setPlayerList((oldList) => [...oldList, [id, player]]);\r\n            }\r\n        });\r\n    }\r\n\r\n    function sortForwards(roster, id) {\r\n        roster.forEach((player) => {\r\n            if (player.position.type === \"Forward\") {\r\n                setPlayerList((oldList) => [...oldList, [id, player]]);\r\n            }\r\n        });\r\n    }\r\n\r\n    function sortDefensemen(roster, id) {\r\n        roster.forEach((player) => {\r\n            if (player.position.type === \"Defenseman\") {\r\n                setPlayerList((oldList) => [...oldList, [id, player]]);\r\n            }\r\n        });\r\n    }\r\n\r\n    function sortGoalies(roster, id) {\r\n        roster.forEach((player) => {\r\n            if (player.position.type === \"Goalie\") {\r\n                setPlayerList((oldList) => [...oldList, [id, player]]);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function getJSON(url) {\r\n        return fetch(url)\r\n            .then((response) => response.json())\r\n            .then((responseJSON) => {\r\n                return responseJSON;\r\n            });\r\n    }\r\n\r\n    function refresh() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <main>\r\n                {!playing && !loading && \r\n                    <div className=\"play-menu\">\r\n                        <div className=\"play-menu-container\">\r\n                            <h1>NHL Higher/Lower</h1>\r\n                            <form>\r\n                                <label htmlFor=\"\">Position:</label>\r\n                                <select id=\"position-selector\" name=\"position-selector\" onChange={positionSelectHandler}>\r\n                                    <option value=\"skaters\">All Skaters</option>\r\n                                    <option value=\"forwards\">Forwards</option>\r\n                                    <option value=\"defensemen\">Defensemen</option>\r\n                                    <option value=\"goalies\">Goalies</option>\r\n                                </select>\r\n                                <label htmlFor=\"stat-type\" className=\"label-padding\">Stat:</label>\r\n                                {!goaliesSelected &&\r\n                                    <select id=\"stat-type\" name=\"stat-type\">\r\n                                        <option value=\"points\">Points</option>\r\n                                        <option value=\"goals\">Goals</option>\r\n                                        <option value=\"assists\">Assists</option>\r\n                                    </select>\r\n                                }\r\n                                {goaliesSelected && \r\n                                    <select id=\"stat-type\" name=\"stat-type\">\r\n                                        <option value=\"wins\">Wins</option>\r\n                                        <option value=\"savePercentage\">Save Percentage</option>\r\n                                        <option value=\"goalsAgainstAverage\">Goals Against Average</option>\r\n                                        <option value=\"saves\">Saves</option>\r\n                                    </select>\r\n                                }\r\n                                <label htmlFor=\"season\" className=\"label-padding\">Season (1918-2022):</label>\r\n                                <input type=\"number\" id=\"season\"></input>\r\n                                <button onClick={play} className=\"play-btn\">Load Players</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {!playing && loading && \r\n                    <div className=\"loading\">\r\n                        <div className=\"loading-content\">\r\n                            <p>Loading...</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {playing && !loading && stat !== \"\" && \r\n                    <Game type=\"NHL\" playerList={playerList} stat={stat} season={season} goalie={goaliesSelected} />\r\n                }\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NHL;"]},"metadata":{},"sourceType":"module"}