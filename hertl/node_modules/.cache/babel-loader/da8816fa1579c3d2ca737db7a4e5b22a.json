{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jango\\\\Desktop\\\\HNUH300 Project\\\\hnuh300-project\\\\src\\\\Hertl.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './Hertl.css';\nimport playerList from './scraping/nhl_players.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hertl(props) {\n  _s();\n\n  // state variables\n  const [correctPlayer, setCorrectPlayer] = useState();\n  const [playing, setPlaying] = useState(true);\n  const [searching, setSearching] = useState(false);\n  const [filtered, setFiltered] = useState([]);\n  const [guesses, setGuesses] = useState([]);\n  const [oneGuess, setOneGuess] = useState(false);\n  const [won, setWon] = useState(false);\n  const [lost, setLost] = useState(false); // generate correct player\n\n  console.log(correctPlayer);\n  const maxGuesses = 8; // check lost\n\n  if (!won && guesses.length >= maxGuesses) {\n    setPlaying(false);\n    setLost(true);\n  } // update doc title\n\n\n  useEffect(() => {\n    setCorrectPlayer(getRandomPlayer());\n    document.title = props.title;\n  }, [props.title]); // generates random player from player list\n\n  function getRandomPlayer() {\n    return playerList[Math.floor(Math.random() * playerList.length)];\n  } // filter player list based on search inputted by user\n\n\n  function search(event) {\n    setFiltered([]);\n    const val = event.target.value;\n\n    if (val.length >= 3) {\n      setSearching(true);\n      playerList.forEach(player => {\n        const name = player.name;\n\n        if (name.toLowerCase().includes(val.toLowerCase())) {\n          setFiltered(old => [...old, player]);\n        }\n      });\n    }\n  } // make a guess via selected search\n\n\n  function guess(event) {\n    setSearching(false);\n    setFiltered([]);\n    document.getElementById(\"search-field\").value = \"\";\n    let guessed = checkGuess(getFilteredPlayer(event.target.id));\n    setGuesses(old => [...old, guessed]);\n\n    if (!oneGuess) {\n      setOneGuess(true);\n    }\n  } // gets player object for searched player\n\n\n  function getFilteredPlayer(id) {\n    let selected;\n    filtered.forEach(player => {\n      if (player.id === parseInt(id)) {\n        selected = player;\n      }\n    });\n    return selected;\n  } // checks guessed player object against the correct player\n\n\n  function checkGuess(player) {\n    let updated = player;\n\n    if (player.name === correctPlayer.name) {\n      updated.name_color = \"green\";\n    }\n\n    if (player.team === correctPlayer.team) {\n      updated.team_color = \"green\";\n    } else if (correctPlayer.formerTeams.includes(player.team)) {\n      updated.team_color = \"yellow\";\n    }\n\n    if (player.division === correctPlayer.division) {\n      updated.division_color = \"green\";\n    } else if (player.conference === correctPlayer.conference) {\n      updated.division_color = \"yellow\";\n    }\n\n    if (player.nationality === correctPlayer.nationality) {\n      updated.nationality_color = \"green\";\n    }\n\n    if (player.position === correctPlayer.position) {\n      updated.position_color = \"green\";\n    } else if ([\"LW\", \"C\", \"RW\"].includes(correctPlayer.position) && [\"LW\", \"C\", \"RW\"].includes(player.position)) {\n      updated.position_color = \"yellow\";\n    }\n\n    if (player.number === correctPlayer.number) {\n      updated.number_color = \"green\";\n    } else if (player.number >= correctPlayer.number - 3 && player.number <= correctPlayer.number + 3) {\n      updated.number_color = \"yellow\";\n    }\n\n    if (player.currentAge === correctPlayer.currentAge) {\n      updated.age_color = \"green\";\n    } else if (player.currentAge >= correctPlayer.currentAge - 3 && player.currentAge <= correctPlayer.currentAge + 3) {\n      updated.age_color = \"yellow\";\n    }\n\n    const guess_height = convert_height(player.height);\n    const correct_height = convert_height(correctPlayer.height);\n\n    if (guess_height === correct_height) {\n      updated.height_color = \"green\";\n    } else if (guess_height >= correct_height - 3 && guess_height <= correct_height + 3) {\n      updated.height_color = \"yellow\";\n    }\n\n    if (player.weight === correctPlayer.weight) {\n      updated.weight_color = \"green\";\n    } else if (player.weight >= correctPlayer.weight - 10 && player.weight <= correctPlayer.weight + 10) {\n      updated.weight_color = \"yellow\";\n    } // guessed player\n\n\n    if (player.id === correctPlayer.id) {\n      setWon(true);\n      setPlaying(false);\n    }\n\n    return updated;\n  }\n\n  function convert_height(height) {\n    const regex = /^(\\d)'\\s(\\d{1,2})\"$/;\n    const found = height.match(regex);\n    return parseInt(found[1]) * 12 + parseInt(found[2]);\n  }\n\n  function refresh() {\n    window.location.reload(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [playing && /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"search-field\",\n          onChange: search,\n          placeholder: \"Guess \" + (guesses.length + 1) + \" of \" + maxGuesses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), searching && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"searchResults\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: filtered.map(player => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                id: player.id,\n                onClick: guess,\n                children: player.name\n              }, player.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 26\n        }, this), oneGuess && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"guesses-table\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Team\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Division\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Nationality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Height\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Weight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: guesses.map(guess => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.name_color,\n                    children: guess.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.team_color,\n                    children: guess.team\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.division_color,\n                    children: guess.division\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.nationality_color,\n                    children: guess.nationality\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.position_color,\n                    children: guess.position\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.number_color,\n                    children: guess.number\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.age_color,\n                    children: guess.currentAge\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.height_color,\n                    children: guess.height\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: guess.weight_color,\n                    children: guess.weight\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 49\n                  }, this)]\n                }, guess.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 22\n        }, this), won && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"won\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You guessed the player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 22\n        }, this), lost && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lost\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You lost. The player was \", correctPlayer.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 22\n        }, this), (lost || won) && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refresh,\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hertl, \"i5/rWVCg8fNQyiSA3M1AMrqPjw0=\");\n\n_c = Hertl;\nexport default Hertl;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hertl\");","map":{"version":3,"sources":["C:/Users/jango/Desktop/HNUH300 Project/hnuh300-project/src/Hertl.js"],"names":["React","useEffect","useState","playerList","Hertl","props","correctPlayer","setCorrectPlayer","playing","setPlaying","searching","setSearching","filtered","setFiltered","guesses","setGuesses","oneGuess","setOneGuess","won","setWon","lost","setLost","console","log","maxGuesses","length","getRandomPlayer","document","title","Math","floor","random","search","event","val","target","value","forEach","player","name","toLowerCase","includes","old","guess","getElementById","guessed","checkGuess","getFilteredPlayer","id","selected","parseInt","updated","name_color","team","team_color","formerTeams","division","division_color","conference","nationality","nationality_color","position","position_color","number","number_color","currentAge","age_color","guess_height","convert_height","height","correct_height","height_color","weight","weight_color","regex","found","match","refresh","window","location","reload","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport './Hertl.css';\r\nimport playerList from './scraping/nhl_players.json'\r\n\r\nfunction Hertl(props) {\r\n    // state variables\r\n    const [correctPlayer, setCorrectPlayer] = useState();\r\n    const [playing, setPlaying] = useState(true);\r\n    const [searching, setSearching] = useState(false);\r\n    const [filtered, setFiltered] = useState([]);\r\n    const [guesses, setGuesses] = useState([]);\r\n    const [oneGuess, setOneGuess] = useState(false);\r\n    const [won, setWon] = useState(false);\r\n    const [lost, setLost] = useState(false);\r\n\r\n    // generate correct player\r\n    console.log(correctPlayer);\r\n    const maxGuesses = 8;\r\n\r\n    // check lost\r\n    if (!won && guesses.length >= (maxGuesses)) {\r\n        setPlaying(false);\r\n        setLost(true);\r\n    }\r\n\r\n    // update doc title\r\n    useEffect(() => {\r\n        setCorrectPlayer(getRandomPlayer());\r\n        document.title = props.title;\r\n    }, [props.title]);\r\n\r\n    // generates random player from player list\r\n    function getRandomPlayer() {\r\n        return playerList[Math.floor(Math.random() * playerList.length)];\r\n    }\r\n\r\n    // filter player list based on search inputted by user\r\n    function search(event) {\r\n        setFiltered([]);\r\n        const val = event.target.value;\r\n        if (val.length >= 3) {\r\n            setSearching(true);\r\n            playerList.forEach((player) => {\r\n                const name = player.name;\r\n                if (name.toLowerCase().includes(val.toLowerCase())) {\r\n                    setFiltered((old) => [...old, player]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // make a guess via selected search\r\n    function guess(event) {\r\n        setSearching(false);\r\n        setFiltered([]);\r\n        document.getElementById(\"search-field\").value = \"\";\r\n\r\n        let guessed = checkGuess(getFilteredPlayer(event.target.id));\r\n        setGuesses((old) => [...old, guessed]);\r\n        if (!oneGuess) {\r\n            setOneGuess(true);\r\n        }\r\n    }\r\n\r\n    // gets player object for searched player\r\n    function getFilteredPlayer(id) {\r\n        let selected;\r\n        filtered.forEach((player) => {\r\n            if (player.id === parseInt(id)) {\r\n                selected = player;\r\n            }\r\n        });\r\n        return selected;\r\n    }\r\n\r\n    // checks guessed player object against the correct player\r\n    function checkGuess(player) {\r\n        let updated = player;\r\n\r\n        if (player.name === correctPlayer.name) {\r\n            updated.name_color = \"green\";\r\n        }\r\n\r\n        if (player.team === correctPlayer.team) {\r\n            updated.team_color = \"green\";\r\n        } else if (correctPlayer.formerTeams.includes(player.team)) {\r\n            updated.team_color = \"yellow\"\r\n        }\r\n\r\n        if (player.division === correctPlayer.division) {\r\n            updated.division_color = \"green\";\r\n        } else if  (player.conference === correctPlayer.conference) {\r\n            updated.division_color = \"yellow\";\r\n        }\r\n\r\n        if (player.nationality === correctPlayer.nationality) {\r\n            updated.nationality_color = \"green\";\r\n        }\r\n\r\n        if (player.position === correctPlayer.position) {\r\n            updated.position_color = \"green\";\r\n        } else if (([\"LW\", \"C\", \"RW\"].includes(correctPlayer.position) && [\"LW\", \"C\", \"RW\"].includes(player.position))) {\r\n            updated.position_color = \"yellow\";\r\n        }\r\n\r\n        if (player.number === correctPlayer.number) {\r\n            updated.number_color = \"green\";\r\n        } else if (player.number >= (correctPlayer.number - 3) && player.number <= (correctPlayer.number + 3)) {\r\n            updated.number_color = \"yellow\";\r\n        }\r\n\r\n        if (player.currentAge === correctPlayer.currentAge) {\r\n            updated.age_color = \"green\";\r\n        } else if (player.currentAge >= (correctPlayer.currentAge - 3) && player.currentAge <= (correctPlayer.currentAge + 3)) {\r\n            updated.age_color = \"yellow\";\r\n        }\r\n\r\n        const guess_height = convert_height(player.height);\r\n        const correct_height = convert_height(correctPlayer.height);\r\n        if (guess_height === correct_height) {\r\n            updated.height_color = \"green\";\r\n        } else if (guess_height >= (correct_height - 3) && guess_height <= (correct_height + 3)) {\r\n            updated.height_color = \"yellow\";\r\n        }\r\n\r\n        if (player.weight === correctPlayer.weight) {\r\n            updated.weight_color = \"green\";\r\n        } else if (player.weight >= (correctPlayer.weight - 10) && player.weight <= (correctPlayer.weight + 10)) {\r\n            updated.weight_color = \"yellow\";\r\n        }\r\n\r\n        // guessed player\r\n        if (player.id === correctPlayer.id) {\r\n            setWon(true);\r\n            setPlaying(false);\r\n        }\r\n\r\n        return updated;\r\n    }\r\n\r\n    function convert_height(height) {\r\n        const regex = /^(\\d)'\\s(\\d{1,2})\"$/;\r\n        const found = height.match(regex);\r\n        return (parseInt(found[1]) * 12) + parseInt(found[2]);\r\n    }\r\n\r\n    function refresh() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <div className=\"game\">\r\n                    {playing &&\r\n                        <input id=\"search-field\" onChange={search} placeholder={\"Guess \" + (guesses.length + 1) + \" of \" + maxGuesses} />\r\n                    }\r\n                    {searching &&\r\n                        (<div id=\"searchResults\">\r\n                            <ul>\r\n                                {\r\n                                    filtered.map((player) => {\r\n                                        return (\r\n                                            <li key={player.id} id={player.id} onClick={guess}>{player.name}</li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>)\r\n                    }\r\n                    {oneGuess &&\r\n                    (<div id=\"guesses-table\">\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Team</th>\r\n                                    <th>Division</th>\r\n                                    <th>Nationality</th>\r\n                                    <th>Position</th>\r\n                                    <th>Number</th>\r\n                                    <th>Age</th>\r\n                                    <th>Height</th>\r\n                                    <th>Weight</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    guesses.map((guess) => {\r\n                                        return (\r\n                                            <tr key={guess.id}>\r\n                                                <td className={guess.name_color}>{guess.name}</td>\r\n                                                <td className={guess.team_color}>{guess.team}</td>\r\n                                                <td className={guess.division_color}>{guess.division}</td>\r\n                                                <td className={guess.nationality_color}>{guess.nationality}</td>\r\n                                                <td className={guess.position_color}>{guess.position}</td>\r\n                                                <td className={guess.number_color}>{guess.number}</td>\r\n                                                <td className={guess.age_color}>{guess.currentAge}</td>\r\n                                                <td className={guess.height_color}>{guess.height}</td>\r\n                                                <td className={guess.weight_color}>{guess.weight}</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>)\r\n                    }\r\n                    {won && \r\n                    (<div id=\"won\">\r\n                        <p>You guessed the player</p>\r\n                    </div>)\r\n                    }\r\n                    {lost &&\r\n                    (<div id=\"lost\">\r\n                        <p>You lost. The player was {correctPlayer.name}</p>\r\n                    </div>)\r\n                    }\r\n                    {(lost || won) &&\r\n                    <button onClick={refresh}>Play Again</button> \r\n                    }\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Hertl;"]},"metadata":{},"sourceType":"module"}